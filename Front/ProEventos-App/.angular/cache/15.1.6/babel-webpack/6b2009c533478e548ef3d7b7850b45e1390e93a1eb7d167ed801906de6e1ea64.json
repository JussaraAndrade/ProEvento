{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// Injeção - pode injetar essa classe em qualquer lugar\n//Encapsulamento\nexport class EventoService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = 'https://localhost:44371/api/eventos';\n  }\n  //Obs: retorno do método é um Array de Observable do tipo Evento\n  //Retornando uma lista de evento\n  getEventos() {\n    return this.http.get(this.baseURL);\n  }\n  //Retornando uma lista de evento\n  getEventosByTema(tema) {\n    return this.http.get(`${this.baseURL}/${tema}/tema`);\n  }\n  //Retornando um evento\n  getEventoById(id) {\n    return this.http.get(`${this.baseURL}/${id}`);\n  }\n}\nEventoService.ɵfac = function EventoService_Factory(t) {\n  return new (t || EventoService)(i0.ɵɵinject(i1.HttpClient));\n};\nEventoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventoService,\n  factory: EventoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA;AAKA;AACA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADxB,YAAO,GAAG,qCAAqC;EACP;EAExC;EAEA;EACOC,UAAU;IACf,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,OAAO,CAAC;EAC9C;EAEA;EACOC,gBAAgB,CAACC,IAAY;IAClC,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,IAAIE,IAAI,OAAO,CAAC;EAChE;EAEA;EACOC,aAAa,CAACC,EAAU;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,IAAII,EAAE,EAAE,CAAC;EACvD;;AAnBWT,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAU,SAAbV,aAAa;EAAAW,YAJZ;AAAM","names":["EventoService","constructor","http","getEventos","get","baseURL","getEventosByTema","tema","getEventoById","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Jussara\\Desktop\\ProEventos\\Front\\ProEventos-App\\src\\app\\services\\evento.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Evento } from \"../models/Evento\";\r\n\r\n// Injeção - pode injetar essa classe em qualquer lugar\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n//Encapsulamento\r\nexport class EventoService {\r\n  baseURL = 'https://localhost:44371/api/eventos';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Obs: retorno do método é um Array de Observable do tipo Evento\r\n\r\n  //Retornando uma lista de evento\r\n  public getEventos(): Observable<Evento[]> {\r\n    return this.http.get<Evento[]>(this.baseURL);\r\n  }\r\n\r\n  //Retornando uma lista de evento\r\n  public getEventosByTema(tema: string): Observable<Evento[]> {\r\n    return this.http.get<Evento[]>(`${this.baseURL}/${tema}/tema`);\r\n  }\r\n\r\n  //Retornando um evento\r\n  public getEventoById(id: number): Observable<Evento> {\r\n    return this.http.get<Evento>(`${this.baseURL}/${id}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}