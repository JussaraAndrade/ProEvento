{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/evento.service\";\nimport * as i2 from \"ngx-bootstrap/modal\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"ngx-spinner\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"ngx-bootstrap/collapse\";\nimport * as i8 from \"ngx-bootstrap/tooltip\";\nimport * as i9 from \"../../../shared/titulo/titulo.component\";\nimport * as i10 from \"../../../helpers/date-time-format.pipe\";\nfunction EventoListaComponent_tbody_35_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 12);\n    i0.ɵɵelement(2, \"img\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 12);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"DateFormatPipe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\", 12);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\", 12);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\")(17, \"div\", 18)(18, \"div\", 19)(19, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function EventoListaComponent_tbody_35_tr_1_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      const _r2 = i0.ɵɵreference(38);\n      return i0.ɵɵresetView(ctx_r6.openModal(_r2));\n    });\n    i0.ɵɵelement(20, \"i\", 21);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const evento_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r4.larguraImagem, \"px\")(\"margin\", ctx_r4.margemImagem, \"px\");\n    i0.ɵɵpropertyInterpolate1(\"src\", \"/assets/\", evento_r5.imagemURL, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵproperty(\"collapse\", !ctx_r4.exibirImagem);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(evento_r5.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(evento_r5.tema);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(evento_r5.local);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 12, evento_r5.dataEvento));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(evento_r5.qtdPessoas);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(evento_r5.lotes[0].nome);\n  }\n}\nfunction EventoListaComponent_tbody_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, EventoListaComponent_tbody_35_tr_1_Template, 21, 14, \"tr\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.eventosFiltrados);\n  }\n}\nfunction EventoListaComponent_tfoot_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tfoot\")(1, \"tr\")(2, \"td\", 22)(3, \"h4\");\n    i0.ɵɵtext(4, \"Nenhum evento encontrado!\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction EventoListaComponent_ng_template_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"p\");\n    i0.ɵɵtext(2, \"Tem certeza deletar esse evento?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function EventoListaComponent_ng_template_37_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.confirm());\n    });\n    i0.ɵɵtext(4, \"Sim\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function EventoListaComponent_ng_template_37_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.decline());\n    });\n    i0.ɵɵtext(6, \"N\\u00E3o\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class EventoListaComponent {\n  // Injeta\n  constructor(eventoService, modalService, toastr, spinner) {\n    this.eventoService = eventoService;\n    this.modalService = modalService;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.eventos = [];\n    this.eventosFiltrados = [];\n    this.larguraImagem = 150;\n    this.margemImagem = 2;\n    this.exibirImagem = true;\n    this.filtroListado = '';\n  }\n  /* Método que vai ser chamado antes de inicializar aplicação */\n  ngOnInit() {\n    this.spinner.show();\n    this.getEventos();\n  }\n  alterarImagem() {\n    this.exibirImagem = !this.exibirImagem;\n  }\n  get filtroLista() {\n    return this.filtroListado;\n  }\n  set filtroLista(value) {\n    this.filtroListado = value;\n    // Se filtroList tem valor? Se tem valor filtra. Se não tem não, não filtra!\n    this.eventosFiltrados = this.filtroLista ? this.filtrarEventos(this.filtroLista) : this.eventos;\n  }\n  // Filtro efetua a busca pelo tema e local\n  filtrarEventos(filtrarPor) {\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    // Pega todos os eventos e efeuta o filtro\n    return this.eventos.filter(\n    // Para cada evento dado, vai pegar o elemento evento o que você quer filtrar ex: tema ou local\n    // Exemplo 2: (evento: { tema: string, local: string })\n    evento => evento.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 || evento.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1);\n  }\n  /*\r\n    Requisita do protocolo http do método get dentro da URL vai fazer o get e vai se inscrever no Observable,\r\n    nesse Observable retorna dois item principais que são response e error.\r\n  */\n  getEventos() {\n    this.eventoService.getEventos().subscribe({\n      next: eventos => {\n        this.eventos = eventos; // recebe o valores para atribuir em uma outra propriedes para refletir na tabela\n        this.eventosFiltrados = this.eventos;\n      },\n      error: error => {\n        this.spinner.hide();\n        this.toastr.error('Erro ao Carregar os Eventos.', 'Erro!');\n      },\n      complete: () => this.spinner.hide()\n    });\n  }\n  openModal(template) {\n    this.modalRef = this.modalService.show(template, {\n      class: 'modal-sm'\n    });\n  }\n  confirm() {\n    this.modalRef?.hide();\n    this.toastr.success('O Evento foi deletado com Sucesso.', 'Deletado!');\n  }\n  decline() {\n    this.modalRef?.hide();\n  }\n}\nEventoListaComponent.ɵfac = function EventoListaComponent_Factory(t) {\n  return new (t || EventoListaComponent)(i0.ɵɵdirectiveInject(i1.EventoService), i0.ɵɵdirectiveInject(i2.BsModalService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.NgxSpinnerService));\n};\nEventoListaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EventoListaComponent,\n  selectors: [[\"app-evento-lista\"]],\n  decls: 39,\n  vars: 10,\n  consts: [[3, \"titulo\", \"iconClass\", \"botaoListar\"], [1, \"card\", \"rounded\", \"shadow-sm\", \"p-3\"], [1, \"d-flex\"], [1, \"flex-fill\", \"pr-3\"], [1, \"input-group\", \"mb-2\"], [1, \"input-group-text\"], [\"type\", \"text\", \"placeholder\", \"Filtrar por Tema e Local\", 1, \"form-control\", \"mr-2\", 3, \"ngModel\", \"ngModelChange\"], [\"href\", \"#\", 1, \"d-flex\", \"btn\", \"btn-outline-primary\"], [1, \"fa\", \"fa-plus-circle\", \"my-1\"], [1, \"ml-1\", \"d-none\", \"d-sm-block\"], [1, \"table\", \"table-striped\"], [1, \"table-dark\"], [1, \"d-none\", \"d-md-table-cell\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-light\", \"btn-sm\", 3, \"click\"], [4, \"ngIf\"], [\"template\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"collapse\", \"src\"], [1, \"row\", \"g-2\"], [1, \"col-auto\"], [\"type\", \"button\", \"tooltip\", \"Excluir\", 1, \"btn\", \"btn-danger\", \"btn-lg\", 3, \"click\"], [1, \"fa\", \"fa-trash\"], [\"colspan\", \"8\", 1, \"text-center\"], [1, \"modal-body\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function EventoListaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-titulo\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5);\n      i0.ɵɵtext(6, \"Filtro: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function EventoListaComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.filtroLista = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"a\", 7);\n      i0.ɵɵelement(9, \"i\", 8);\n      i0.ɵɵelementStart(10, \"b\", 9);\n      i0.ɵɵtext(11, \"Novo\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(12, \"div\")(13, \"br\");\n      i0.ɵɵelementStart(14, \"table\", 10)(15, \"thead\", 11)(16, \"tr\")(17, \"th\", 12)(18, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function EventoListaComponent_Template_button_click_18_listener() {\n        return ctx.alterarImagem();\n      });\n      i0.ɵɵelement(19, \"i\");\n      i0.ɵɵtext(20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Tema\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\", 12);\n      i0.ɵɵtext(26, \"Local\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\");\n      i0.ɵɵtext(28, \"Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\", 12);\n      i0.ɵɵtext(30, \"Qtd Pessoas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"th\", 12);\n      i0.ɵɵtext(32, \"Lote\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"th\");\n      i0.ɵɵtext(34, \"Op\\u00E7\\u00F5es\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(35, EventoListaComponent_tbody_35_Template, 2, 1, \"tbody\", 14);\n      i0.ɵɵtemplate(36, EventoListaComponent_tfoot_36_Template, 5, 0, \"tfoot\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(37, EventoListaComponent_ng_template_37_Template, 7, 0, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"titulo\", \"Eventos\")(\"iconClass\", \"fa fa-calendar-alt\")(\"botaoListar\", true);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.filtroLista);\n      i0.ɵɵadvance(12);\n      i0.ɵɵclassMap(!ctx.exibirImagem ? \"fa fa-eye\" : \"fa fa-eye-slash\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", !ctx.exibirImagem ? \"exibir\" : \"ocultar\", \" \");\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngIf\", ctx.eventos && ctx.eventos.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.eventos.length);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel, i7.CollapseDirective, i8.TooltipDirective, i9.TituloComponent, i10.DateTimeFormatPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","EventoListaComponent","constructor","eventoService","modalService","toastr","spinner","ngOnInit","show","getEventos","alterarImagem","exibirImagem","filtroLista","filtroListado","value","eventosFiltrados","filtrarEventos","eventos","filtrarPor","toLocaleLowerCase","filter","evento","tema","indexOf","local","subscribe","next","error","hide","complete","openModal","template","modalRef","class","confirm","success","decline","selectors","decls","vars","consts","ctx"],"sourceRoot":"","sources":["C:\\Users\\Jussara\\Desktop\\ProEventos\\Front\\ProEventos-App\\src\\app\\components\\eventos\\evento-lista\\evento-lista.component.html","C:\\Users\\Jussara\\Desktop\\ProEventos\\Front\\ProEventos-App\\src\\app\\components\\eventos\\evento-lista\\evento-lista.component.ts"],"sourcesContent":["<app-titulo [titulo]=\"'Eventos'\" [iconClass]=\"'fa fa-calendar-alt'\" [botaoListar]=\"true\"></app-titulo>\n\n\n<div class=\"card rounded shadow-sm p-3\">\n\n  <div class=\"d-flex\">\n    <div class=\"flex-fill pr-3\">\n      <div class=\"input-group mb-2\">\n        <div class=\"input-group-text\">Filtro: </div>\n        <input type=\"text\" placeholder=\"Filtrar por Tema e Local\" [(ngModel)]='filtroLista' class=\"form-control mr-2\">\n\n        <a class=\"d-flex btn btn-outline-primary\" href=\"#\">\n          <i class=\"fa fa-plus-circle my-1\"></i>\n          <b class=\"ml-1 d-none d-sm-block\">Novo</b>\n        </a>\n      </div>\n    </div>\n  </div>\n  <div>\n\n  </div>\n\n  <br>\n\n  <table class=\"table table-striped\">\n    <thead class=\"table-dark\">\n      <tr>\n        <th class=\"d-none d-md-table-cell\">\n          <button type=\"button\" class=\"btn btn-outline-light btn-sm\" (click)='alterarImagem()'>\n            <i class=\"{{!exibirImagem ? 'fa fa-eye' : 'fa fa-eye-slash'}}\"></i>\n            {{!exibirImagem ? 'exibir': 'ocultar'}}\n          </button>\n        </th>\n        <th>#</th>\n        <th>Tema</th>\n        <th class=\"d-none d-md-table-cell\">Local</th>\n        <th>Data</th>\n        <th class=\"d-none d-md-table-cell\">Qtd Pessoas</th>\n        <th class=\"d-none d-md-table-cell\">Lote</th>\n        <th>Opções</th>\n      </tr>\n    </thead>\n    <tbody *ngIf=\"eventos && eventos.length\">\n      <tr *ngFor=\"let evento of eventosFiltrados\">\n        <td class=\"d-none d-md-table-cell\">\n          <img [collapse]=\"!exibirImagem\" src=\"/assets/{{evento.imagemURL}}\" [style.width.px]=\"larguraImagem\"\n            [style.margin.px]=\"margemImagem\">\n        </td>\n        <td>{{evento.id}}</td>\n        <td>{{evento.tema}}</td>\n        <td class=\"d-none d-md-table-cell\">{{evento.local}}</td>\n        <td>{{evento.dataEvento | DateFormatPipe}}</td>\n        <td class=\"d-none d-md-table-cell\">{{evento.qtdPessoas}}</td>\n        <td class=\"d-none d-md-table-cell\">{{evento.lotes[0].nome}}</td>\n        <td>\n          <div class=\"row g-2\">\n            <div class=\"col-auto\">\n              <button type=\"button\" class=\"btn btn-danger btn-lg\" tooltip=\"Excluir\" (click)=\"openModal(template)\"><i\n                  class=\"fa fa-trash\"></i>\n              </button>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot *ngIf=\"!eventos.length\">\n      <tr>\n        <td colspan=\"8\" class=\"text-center\">\n          <h4>Nenhum evento encontrado!</h4>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n\n</div>\n<!-- Dica: ver o Json na tela ajuda na identificação da propriedades do objeto {{eventos | json}} -->\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Tem certeza deletar esse evento?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\">Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\">Não</button>\n  </div>\n</ng-template>\n","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Evento } from 'src/app/models/Evento';\nimport { EventoService } from 'src/app/services/evento.service';\n\n@Component({\n  selector: 'app-evento-lista',\n  templateUrl: './evento-lista.component.html',\n  styleUrls: ['./evento-lista.component.scss']\n})\nexport class EventoListaComponent {\n  modalRef?: BsModalRef;\n  message?: string;\n\n  eventos: Evento[] = [];\n  eventosFiltrados: Evento[] = [];\n\n  larguraImagem: number = 150;\n  margemImagem: number = 2;\n  exibirImagem = true;\n  private filtroListado = '';\n\n  // Injeta\n  constructor(\n    private eventoService: EventoService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService\n  ) { }\n\n   /* Método que vai ser chamado antes de inicializar aplicação */\n  public ngOnInit(): void {\n    this.spinner.show();\n    this.getEventos();\n  }\n\n  public alterarImagem(): void {\n    this.exibirImagem = !this.exibirImagem;\n  }\n\n  public get filtroLista(): string{\n    return this.filtroListado;\n  }\n\n  public set filtroLista(value: string){\n    this.filtroListado = value;\n    // Se filtroList tem valor? Se tem valor filtra. Se não tem não, não filtra!\n    this.eventosFiltrados = this.filtroLista ? this.filtrarEventos(this.filtroLista) : this.eventos;\n  }\n\n  // Filtro efetua a busca pelo tema e local\n  filtrarEventos(filtrarPor: string): Evento[] {\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    // Pega todos os eventos e efeuta o filtro\n    return this.eventos.filter(\n      // Para cada evento dado, vai pegar o elemento evento o que você quer filtrar ex: tema ou local\n      // Exemplo 2: (evento: { tema: string, local: string })\n      (evento:  any) => evento.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 ||\n      evento.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n    );\n  }\n\n  /*\n    Requisita do protocolo http do método get dentro da URL vai fazer o get e vai se inscrever no Observable,\n    nesse Observable retorna dois item principais que são response e error.\n  */\n  public getEventos(): void {\n    this.eventoService.getEventos().subscribe({\n      next: (eventos: Evento[]) => { // Informando a tipagem Evento[] - recebe os valores da chamada da api\n        this.eventos = eventos; // recebe o valores para atribuir em uma outra propriedes para refletir na tabela\n        this.eventosFiltrados = this.eventos;\n      },\n      error: (error: any) => {\n        this.spinner.hide();\n        this.toastr.error('Erro ao Carregar os Eventos.', 'Erro!');\n      },\n      complete: () => this.spinner.hide()\n    });\n  }\n\n  openModal(template: TemplateRef<any>): void {\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  confirm(): void {\n    this.modalRef?.hide();\n    this.toastr.success('O Evento foi deletado com Sucesso.', 'Deletado!');\n  }\n\n  decline(): void {\n    this.modalRef?.hide();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}